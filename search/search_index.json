{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Course website Material Hello world!! This website Zoom meeting (through mail) Google doc (through mail) Slack channel Learning outcomes General learning outcomes After this course, you will be able to: Learning outcomes explained To reach the general learning outcomes above, we have set a number of smaller learning outcomes. Each chapter starts with these smaller learning outcomes. Use these at the start of a chapter to get an idea what you will learn. Use them also at the end of a chapter to evaluate whether you have learned what you were expected to learn. Learning experiences To reach the learning outcomes we will use lectures, exercises, polls and group work. During exercises, you are free to discuss with other participants. During lectures, focus on the lecture only. Exercises Each block has practical work involved. Some more than others. The practicals are subdivided into chapters, and we\u2019ll have a (short) discussion after each chapter. All answers to the practicals are incorporated, but they are hidden. Do the exercise first by yourself, before checking out the answer. If your answer is different from the answer in the practicals, try to figure out why they are different. Asking questions During lectures, you are encouraged to raise your hand if you have questions (if in-person), or use the Zoom functionality (if online). Find the buttons in the participants list (\u2018Participants\u2019 button): Alternatively, (depending on your zoom version or OS) use the \u2018Reactions\u2019 button: A main source of communication will be our slack channel . Ask background questions that interest you personally at #background . During the exercises, e.g. if you are stuck or don\u2019t understand what is going on, use the slack channel #q-and-a . This channel is not only meant for asking questions but also for answering questions of other participants. If you are replying to a question, use the \u201creply in thread\u201d option: The teacher will review the answers, and add/modify if necessary. If you\u2019re really stuck and need specific tutor support, write the teachers or helpers personally. To summarise: During lectures: raise hand/zoom functionality Personal interest questions: #background During exercises: #q-and-a on slack","title":"Home of my course"},{"location":"#course-website","text":"","title":"Course website"},{"location":"#material","text":"","title":"Material"},{"location":"#hello-world","text":"This website Zoom meeting (through mail) Google doc (through mail) Slack channel","title":"Hello world!!"},{"location":"#learning-outcomes","text":"","title":"Learning outcomes"},{"location":"#general-learning-outcomes","text":"After this course, you will be able to:","title":"General learning outcomes"},{"location":"#learning-outcomes-explained","text":"To reach the general learning outcomes above, we have set a number of smaller learning outcomes. Each chapter starts with these smaller learning outcomes. Use these at the start of a chapter to get an idea what you will learn. Use them also at the end of a chapter to evaluate whether you have learned what you were expected to learn.","title":"Learning outcomes explained"},{"location":"#learning-experiences","text":"To reach the learning outcomes we will use lectures, exercises, polls and group work. During exercises, you are free to discuss with other participants. During lectures, focus on the lecture only.","title":"Learning experiences"},{"location":"#exercises","text":"Each block has practical work involved. Some more than others. The practicals are subdivided into chapters, and we\u2019ll have a (short) discussion after each chapter. All answers to the practicals are incorporated, but they are hidden. Do the exercise first by yourself, before checking out the answer. If your answer is different from the answer in the practicals, try to figure out why they are different.","title":"Exercises"},{"location":"#asking-questions","text":"During lectures, you are encouraged to raise your hand if you have questions (if in-person), or use the Zoom functionality (if online). Find the buttons in the participants list (\u2018Participants\u2019 button): Alternatively, (depending on your zoom version or OS) use the \u2018Reactions\u2019 button: A main source of communication will be our slack channel . Ask background questions that interest you personally at #background . During the exercises, e.g. if you are stuck or don\u2019t understand what is going on, use the slack channel #q-and-a . This channel is not only meant for asking questions but also for answering questions of other participants. If you are replying to a question, use the \u201creply in thread\u201d option: The teacher will review the answers, and add/modify if necessary. If you\u2019re really stuck and need specific tutor support, write the teachers or helpers personally. To summarise: During lectures: raise hand/zoom functionality Personal interest questions: #background During exercises: #q-and-a on slack","title":"Asking questions"},{"location":"course_schedule/","text":"start end topic 10:00 10:30 coffee! 12:00 13:00 lunch! Generate markdown tables at tablesgenerator.com","title":"Course schedule approved"},{"location":"precourse/","text":"UNIX As is stated in the course prerequisites at the announcement web page , we expect participants to have a basic understanding of working with the command line on UNIX-based systems. You can test your UNIX skills with a quiz here . If you don\u2019t have experience with UNIX command line, or if you\u2019re unsure whether you meet the prerequisites, follow our online UNIX tutorial . Software We will be mainly working on an Amazon Web Services ( AWS ) Elastic Cloud (EC2) server. Our Ubuntu server behaves like a \u2018normal\u2019 remote server, and can be approached through ssh with a username, key and IP address. All participants will be granted access to a personal home directory. Before the course, make sure you can comfortably work on a remote server. This means that you can approach it through the shell, modify scripts and transfer files. We can recommend atom for Linux and Mac, and Notepad ++ in combination with MobaXterm for Windows. We will be visualising our results with IGV. Therefore, install in your computer: mac OS/Linux SSH and scripting: Atom with packages like: terminus and ftp-remote-edit Transferring files: FileZilla Integrative Genomics Viewer (IGV) Windows SSH and scripting: MobaXterm and/or Notepad++ with the plugin NppFTP Transferring files: FileZilla Integrative Genomics Viewer (IGV)","title":"Precourse preparations"},{"location":"precourse/#unix","text":"As is stated in the course prerequisites at the announcement web page , we expect participants to have a basic understanding of working with the command line on UNIX-based systems. You can test your UNIX skills with a quiz here . If you don\u2019t have experience with UNIX command line, or if you\u2019re unsure whether you meet the prerequisites, follow our online UNIX tutorial .","title":"UNIX"},{"location":"precourse/#software","text":"We will be mainly working on an Amazon Web Services ( AWS ) Elastic Cloud (EC2) server. Our Ubuntu server behaves like a \u2018normal\u2019 remote server, and can be approached through ssh with a username, key and IP address. All participants will be granted access to a personal home directory. Before the course, make sure you can comfortably work on a remote server. This means that you can approach it through the shell, modify scripts and transfer files. We can recommend atom for Linux and Mac, and Notepad ++ in combination with MobaXterm for Windows. We will be visualising our results with IGV. Therefore, install in your computer: mac OS/Linux SSH and scripting: Atom with packages like: terminus and ftp-remote-edit Transferring files: FileZilla Integrative Genomics Viewer (IGV) Windows SSH and scripting: MobaXterm and/or Notepad++ with the plugin NppFTP Transferring files: FileZilla Integrative Genomics Viewer (IGV)","title":"Software"},{"location":"exercises/exercises_day1/","text":"My markdown exercise day 1 to do With plain markdown you can highlight in two ways: Italic Bold You can add a link to your favourite website . Or add an image from that website (find it at https://www.sib.swiss/images/banners/banner_research_infrastructure.jpg ): You can also add a local image (this one is stored in ../assets/images/zoom_icons.png ): Sharing a code is easy, inline you refer to code like this: pip install mkdocs . But often it\u2019s more convenient in a code block, e.g. with shell highlighting: FILE = my_genes.csv cat $FILE | cut -f 1 ,2 -d ',' Or with R highlighting for example: df <- read.csv ( 'my_genes.csv' ) Warning Do not overcommit the server! Answer Do not overcommit the server! Done Do not overcommit the server! code: R Generating a vector of integers: a <- c ( 5 , 4 , 3 , 2 , 1 ) python Generating a list of integers: a = [ 5 , 4 , 3 , 2 , 1 ] Write an e-mail , add a pdf and wait Download the presentation Download the presentation test code Write an e-mail :material-send:, add a pdf :material-file-pdf: and wait :clock1: output Write an e-mail , add a pdf and wait ```","title":"Day 1"},{"location":"exercises/exercises_day1/#my-markdown-exercise-day-1-to-do","text":"With plain markdown you can highlight in two ways: Italic Bold You can add a link to your favourite website . Or add an image from that website (find it at https://www.sib.swiss/images/banners/banner_research_infrastructure.jpg ): You can also add a local image (this one is stored in ../assets/images/zoom_icons.png ): Sharing a code is easy, inline you refer to code like this: pip install mkdocs . But often it\u2019s more convenient in a code block, e.g. with shell highlighting: FILE = my_genes.csv cat $FILE | cut -f 1 ,2 -d ',' Or with R highlighting for example: df <- read.csv ( 'my_genes.csv' ) Warning Do not overcommit the server! Answer Do not overcommit the server! Done Do not overcommit the server! code: R Generating a vector of integers: a <- c ( 5 , 4 , 3 , 2 , 1 ) python Generating a list of integers: a = [ 5 , 4 , 3 , 2 , 1 ] Write an e-mail , add a pdf and wait Download the presentation Download the presentation","title":"My markdown exercise day 1 to do"},{"location":"exercises/exercises_day1/#test","text":"code Write an e-mail :material-send:, add a pdf :material-file-pdf: and wait :clock1: output Write an e-mail , add a pdf and wait ```","title":"test"},{"location":"exercises/exercises_day2/","text":"My markdown exercise day 2 to do With plain markdown you can highlight in two ways: Italic Bold You can add a link to your favourite website . Or add an image from that website (find it at https://www.sib.swiss/images/banners/banner_research_infrastructure.jpg ): You can also add a local image (this one is stored in ../assets/images/zoom_icons.png ): Sharing a code is easy, inline you refer to code like this: pip install mkdocs . But often it\u2019s more convenient in a code block, e.g. with shell highlighting: FILE = my_genes.csv cat $FILE | cut -f 1 ,2 -d ',' Or with R highlighting for example: df <- read.csv ( 'my_genes.csv' ) Warning Do not overcommit the server! code: R Generating a vector of integers: a <- c ( 5 , 4 , 3 , 2 , 1 ) python Generating a list of integers: a = [ 5 , 4 , 3 , 2 , 1 ] Write an e-mail , add a pdf and wait Download the presentation Download the presentation test code Write an e-mail :material-send:, add a pdf :material-file-pdf: and wait :clock1: output Write an e-mail , add a pdf and wait ```","title":"Day 2"},{"location":"exercises/exercises_day2/#my-markdown-exercise-day-2-to-do","text":"With plain markdown you can highlight in two ways: Italic Bold You can add a link to your favourite website . Or add an image from that website (find it at https://www.sib.swiss/images/banners/banner_research_infrastructure.jpg ): You can also add a local image (this one is stored in ../assets/images/zoom_icons.png ): Sharing a code is easy, inline you refer to code like this: pip install mkdocs . But often it\u2019s more convenient in a code block, e.g. with shell highlighting: FILE = my_genes.csv cat $FILE | cut -f 1 ,2 -d ',' Or with R highlighting for example: df <- read.csv ( 'my_genes.csv' ) Warning Do not overcommit the server! code: R Generating a vector of integers: a <- c ( 5 , 4 , 3 , 2 , 1 ) python Generating a list of integers: a = [ 5 , 4 , 3 , 2 , 1 ] Write an e-mail , add a pdf and wait Download the presentation Download the presentation","title":"My markdown exercise day 2 to do"},{"location":"exercises/exercises_day2/#test","text":"code Write an e-mail :material-send:, add a pdf :material-file-pdf: and wait :clock1: output Write an e-mail , add a pdf and wait ```","title":"test"}]}